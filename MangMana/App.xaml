<Application x:Class="MangMana.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 StartupUri="Views/MainWindow.xaml">
	<Application.Resources>

		<Style TargetType="{x:Type TextBox}">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Foreground" Value="White" />
			<Setter Property="CaretBrush" Value="White" />
		</Style>

		<Style x:Key="LockableTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
			<Setter Property="IsReadOnly" Value="{Binding ReadOnlyMode}" />
			<Setter Property="Padding" Value="0" />
			<EventSetter Event="MouseDoubleClick" Handler="UnlockTextBox" />
			<Style.Triggers>
				<Trigger Property="IsReadOnly" Value="True">
					<Setter Property="BorderThickness" Value="0" />
					<Setter Property="Padding" Value="1" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type TabItem}">
			<Setter Property="Foreground" Value="White" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Border x:Name="_panel" Background="#505050"
								Padding="5 2" Margin="0 2 0 0" CornerRadius="5 5 0 0">
							<ContentPresenter Name="ContentSite" ContentSource="Header" VerticalAlignment="Center" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="_panel" Property="Background" Value="DimGray" />
								<Setter TargetName="_panel" Property="Margin" Value="0" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type Label}">
			<Setter Property="Foreground" Value="DarkGray" />
		</Style>
		<Style TargetType="{x:Type TabControl}">
			<Setter Property="Background" Value="#353540" />
			<Setter Property="BorderBrush" Value="Black" />
		</Style>
		<Style TargetType="{x:Type ListBox}">
			<Setter Property="Background" Value="#303035" />
			<Setter Property="Foreground" Value="White" />
			<Setter Property="BorderBrush" Value="Black" />
		</Style>

		<Style TargetType="{x:Type Button}">
			<Setter Property="Foreground" Value="White" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="_panel" Padding="1" CornerRadius="5"
								BorderBrush="Black" BorderThickness="1"
								Background="DimGray">

							<ContentPresenter HorizontalAlignment="Center" />
						</Border>

						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value=".5" />
							</Trigger>
							<EventTrigger RoutedEvent="MouseEnter">
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="_panel" Storyboard.TargetProperty="Background.Color"
														 From="DimGray" To="Gray" Duration="0:0:.2" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="MouseLeave">
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="_panel" Storyboard.TargetProperty="Background.Color"
														 From="Gray" To="DimGray" Duration="0:0:.2" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="IconButton" TargetType="{x:Type Button}">
			<Setter Property="Width" Value="25" />
			<Setter Property="Margin" Value="3" />
			<Setter Property="IsTabStop" Value="false" />
			<Setter Property="Focusable" Value="false" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ContentPresenter />
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value=".3" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value=".75" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="BackButton" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
			<Setter Property="IsEnabled" Value="{Binding NotFirstImage}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Image Source="../Icons/back.png" />
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value=".3" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value=".75" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ForwardButton" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
			<Setter Property="IsEnabled" Value="{Binding NotLastImage}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Image Source="../Icons/next.png" />
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value=".3" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value=".75" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="LockButton" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
			<Setter Property="Command" Value="{Binding ToggleReadOnlyModeCommand}" />
			<Setter Property="ToolTip" Value="Toggle edit mode" />
			<Setter Property="HorizontalAlignment" Value="Right" />
			<Setter Property="VerticalAlignment" Value="Top" />
			<Setter Property="Panel.ZIndex" Value="1" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Image Source="{Binding LockIcon}" />
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value=".3" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value=".75" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="SearchButton" TargetType="{x:Type Button}">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Name="_panel">
							<ContentPresenter HorizontalAlignment="Center" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="_panel" Property="Background" Value="Gray" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- scrollbar style -->
		<Style TargetType="{x:Type ScrollViewer}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollViewer}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<ScrollContentPresenter />
							<ScrollBar x:Name="PART_VerticalScrollBar"
									   Grid.Row="0"
									   Grid.Column="1"
									   Value="{TemplateBinding VerticalOffset}"
									   Maximum="{TemplateBinding ScrollableHeight}"
									   ViewportSize="{TemplateBinding ViewportHeight}"
									   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
							<ScrollBar x:Name="PART_HorizontalScrollBar"
									   Orientation="Horizontal"
									   Grid.Row="1"
									   Grid.Column="0"
									   Value="{TemplateBinding HorizontalOffset}"
									   Maximum="{TemplateBinding ScrollableWidth}"
									   ViewportSize="{TemplateBinding ViewportWidth}"
									   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!-- https://stackoverflow.com/a/37095870 -->
		<SolidColorBrush x:Key="ScrollBarBrush" Color="#686868" />
		<SolidColorBrush x:Key="ScrollBarBack" Color="#202020" />

		<Style x:Key="ScrollBarRepeatButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="Visibility" Value="Hidden" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="OverridesDefaultStyle" Value="true" />
			<Setter Property="IsTabStop" Value="false" />
			<Setter Property="Focusable" Value="false" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Border Background="Transparent" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="OverridesDefaultStyle" Value="true" />
			<Setter Property="IsTabStop" Value="false" />
			<Setter Property="Focusable" Value="false" />
			<Setter Property="Background" Value="{StaticResource ScrollBarBrush}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border CornerRadius="4" Background="{TemplateBinding Background}" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type ScrollBar}">
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="OverridesDefaultStyle" Value="true" />
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Vertical">
					<Setter Property="Width" Value="18" />
					<Setter Property="Height" Value="Auto" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate>
								<Grid>
									<Border Background="{StaticResource ScrollBarBack}" Width="8" Margin="8 0 0 0" CornerRadius="4" />
									<Track Name="PART_Track" IsDirectionReversed="true">
										<Track.DecreaseRepeatButton>
											<RepeatButton Style="{StaticResource ScrollBarRepeatButton}" Command="ScrollBar.PageUpCommand" Width="8" Margin="8 0 0 0" />
										</Track.DecreaseRepeatButton>
										<Track.Thumb>
											<Thumb Style="{StaticResource ScrollBarThumb}" Width="8" Margin="8 0 0 0" />
										</Track.Thumb>
										<Track.IncreaseRepeatButton>
											<RepeatButton Style="{StaticResource ScrollBarRepeatButton}" Command="ScrollBar.PageDownCommand" Width="8" Margin="8 0 0 0" />
										</Track.IncreaseRepeatButton>
									</Track>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
				<Trigger Property="Orientation" Value="Horizontal">
					<Setter Property="Width" Value="Auto" />
					<Setter Property="Height" Value="18" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate>
								<Grid>
									<Border Background="{StaticResource ScrollBarBack}" Height="8" Margin="0 8 0 0" CornerRadius="4" />
									<Track Name="PART_Track" IsDirectionReversed="False">
										<Track.DecreaseRepeatButton>
											<RepeatButton Style="{StaticResource ScrollBarRepeatButton}" Command="ScrollBar.PageLeftCommand" Height="8" Margin="0 8 0 0" />
										</Track.DecreaseRepeatButton>
										<Track.Thumb>
											<Thumb Style="{StaticResource ScrollBarThumb}" Height="8" Margin="0 8 0 0" />
										</Track.Thumb>
										<Track.IncreaseRepeatButton>
											<RepeatButton Style="{StaticResource ScrollBarRepeatButton}" Command="ScrollBar.PageRightCommand" Height="8" Margin="0 8 0 0" />
										</Track.IncreaseRepeatButton>
									</Track>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
	</Application.Resources>
</Application>